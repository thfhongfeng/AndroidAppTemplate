plugins {
    id 'com.android.library'
    id 'maven-publish'
}
apply from: "${rootDir}/gradleWorker/task/GenerateFileTask.gradle"
apply from: "${rootDir}/gradleWorker/task/PublishTask.gradle"

android {
    compileSdkVersion build_versions.compileSdkVersion

    defaultConfig {
        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions "default"

        // ARouter配置 begin
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        // ARouter配置 end
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        build_flavor_product.each { flavorName, _ ->
            "$flavorName" {
            }
        }
    }

    resourcePrefix "login_"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // ARouter配置 begin
    implementation build_dependency["arouter_api"]
    annotationProcessor build_dependency["arouter_compiler"]
    // ARouter配置 end

    // 第三方 dependency begin
    // 第三方 dependency end

    android.libraryVariants.all { variant ->
        // 获取当前 variant 的 flavor 名称
        def flavorName = variant.flavorName

        // 业务基础模块 begin
        "${flavorName}Api" rootProject.ext.dependencyCustom("bundle_base", flavorName)
        // 业务基础模块 end
    }
}
