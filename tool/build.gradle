plugins {
    id 'com.android.library'
    id 'maven-publish'
}
apply from: "${rootDir}/gradleWorker/task/PublishTask.gradle"

android {
    namespace "com.pine.tool"

    compileSdkVersion build_versions.compileSdkVersion

    defaultConfig {
        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion

        buildConfigField "String", "FILE_PROVIDER_AUTHORITY", "\"${app_config.file_provider_authority}\""
        resValue "string", "file_provider_authority", "\"${app_config.file_provider_authority}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding = true
        //AGP 8.0+ 默认不再为库模块生成 BuildConfig。需要主动打开功能
        buildConfig = true
        //AGP 8.0+ 默认不再为AIDL生成java。需要主动打开功能
        aidl = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // 测试 dependency begin
    androidTestImplementation(build_dependency["test_espresso_core"], {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation build_dependency["test_junit"]
    // 测试 dependency end

    // android官方 dependency begin
    api build_dependency["android_appcompat"]
    api build_dependency["android_constraint_layout"]
    api build_dependency["android_support_design"]
    api build_dependency["android_lifecycle_extensions"]
    // android官方 dependency end

    // google官方 dependency begin
    api build_dependency["google_gson"]
    // google官方 dependency end

    // ARouter配置 begin
    implementation build_dependency["arouter_api"]
    // ARouter配置 end

    // 第三方 dependency begin
    api build_dependency["nohttp_nohttp"]
    implementation build_dependency["vdurmont_emoji"]
    // 第三方 dependency end
}
