plugins {
    id 'com.android.library'
    id 'maven-publish'
}
apply from: "${rootDir}/gradleWorker/task/PublishTask.gradle"

android {
    compileSdkVersion build_versions.compileSdkVersion

    defaultConfig {
        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions "default"
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            res.srcDirs += [
                    'src/main/res/layouts/activity',
                    'src/main/res/layouts/fragment',
                    'src/main/res/layouts/widget',
                    'src/main/res/layouts/dialog',
                    'src/main/res/layouts/item'
            ]
            java.srcDirs = ['src/main/java']
            jniLibs.srcDir 'libs'
            jni.srcDirs = []    //disable automatic ndk-build
        }
    }

    resourcePrefix "base_"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // 第三方 dependency begin
    api build_dependency["aigestudio_wheelpicker"]
    api build_dependency['safewebviewbridge']
    api build_dependency['bumptech_glide']
    annotationProcessor build_dependency['bumptech_glide_compiler']
    annotationProcessor build_dependency['android_annotation']
    // 第三方 dependency end

    // library project begin
    api rootProject.ext.dependencyCustom("base_lib_zxing", "")
    // library project end

    // 公共工具模块 begin
    api rootProject.ext.dependencyCustom("tool", "")
    // 公共工具模块 end
}
