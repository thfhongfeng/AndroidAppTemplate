apply plugin: 'com.android.library'

android {
    compileSdkVersion build_versions.compileSdkVersion
    buildToolsVersion build_versions.buildToolsVersion

    defaultConfig {
        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion
        versionCode build_versions.versionCode
        versionName build_versions.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // ARouter配置 begin
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        // ARouter配置 end
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            res.srcDirs += [
                    'src/main/res/layouts/activity',
                    'src/main/res/layouts/fragment',
                    'src/main/res/layouts/widget',
                    'src/main/res/layouts/dialog',
                    'src/main/res/layouts/item'
            ]
            jniLibs.srcDir 'libs'
            jni.srcDirs = []    //disable automatic ndk-build
        }
    }
    resourcePrefix "db_"
}

repositories {
    flatDir {
        dirs 'libs', '../base/libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // ARouter配置 begin
    implementation build_dependency["arouter_api"]
    annotationProcessor build_dependency["arouter_compiler"]
    // ARouter配置 end

    // 第三方 dependency begin
    // 第三方 dependency end

    // 主体基础模块 begin
    api project(':base')
    // 主体基础模块 end
}