apply plugin: 'com.android.library'

android {
    compileSdkVersion build_versions.compileSdkVersion
    buildToolsVersion build_versions.buildToolsVersion

    defaultConfig {
        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion

        versionCode build_versions.versionCode
        versionName build_versions.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions "default"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        common {
            versionCode build_product_versionCode.common
            versionName build_product_versionName.common

            manifestPlaceholders = [app_name: build_product_appName.common]
        }
        huawei {
            versionCode build_product_versionCode.huawei
            versionName build_product_versionName.huawei

            manifestPlaceholders = [app_name: build_product_appName.huawei]
        }
        xiaomi {
            versionCode build_product_versionCode.xiaomi
            versionName build_product_versionName.xiaomi

            manifestPlaceholders = [app_name: build_product_appName.xiaomi]
        }
    }

    resourcePrefix "router_"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // ARouter配置 begin
    implementation build_dependency["arouter_api"]
    // ARouter配置 end

    // 公共工具模块 begin
    api project(':config')
    // 公共工具模块 end
}
